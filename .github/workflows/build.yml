name: Build and Release Qt Executable

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Qt6
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.3'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'
        modules: 'qtcharts qtwebengine'
        
    - name: Set up MSVC
      uses: microsoft/setup-msbuild@v1.3
      
    - name: Configure CMake
      run: |
        cmake -B build -S . -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=$env:Qt6_DIR
        
    - name: Build project
      run: |
        cmake --build build --config Release
        
    - name: Deploy Windows executable
      run: |
        # 创建一个用于部署的文件夹
        mkdir deploy
        # 使用windeployqt自动复制所有需要的Qt库到deploy文件夹中
        $env:Qt6_DIR/bin/windeployqt.exe --release --dir deploy build/Release/qt_2025_game.exe
        # 【重要】如果您的游戏有图片、音频等资源文件，请在这里手动复制它们到deploy文件夹
        # 例如: cp -r assets deploy/
        # 将整个部署文件夹压缩，以便上传
        Compress-Archive -Path "deploy/*" -DestinationPath "qt-2d-game-windows.zip"
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: qt-2d-game-windows
        path: qt-2d-game-windows.zip
        retention-days: 7

  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libfuse2 libgl1-mesa-glx
        
    - name: Install Qt6
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.3'
        host: 'linux'
        target: 'desktop'

    - name: Download linuxdeployqt
      run: |
        wget -c -nv "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage"
        wget -c -nv "https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage"
        chmod +x linuxdeploy*.AppImage
        
    - name: Configure CMake
      run: |
        cmake -B build -S . -DCMAKE_BUILD_TYPE=Release
        
    - name: Build project
      run: |
        cmake --build build --config Release -j$(nproc)

    - name: Deploy Linux executable (AppImage)
      run: |
        # ./linuxdeploy-x86_64.AppImage --appdir AppDir -e build/qt_2025_game -d your_app.desktop -i your_app_icon.png --plugin qt --output appimage
        ./linuxdeploy-x86_64.AppImage --appdir AppDir -e build/qt_2025_game --plugin qt --output appimage
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: qt-2d-game-linux
        path: "*.AppImage"
        retention-days: 7

  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Qt6
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.3'
        host: 'mac'
        target: 'desktop'
        
    - name: Configure CMake
      run: |
        cmake -B build -S . -DCMAKE_BUILD_TYPE=Release
        
    - name: Build project
      run: |
        cmake --build build --config Release -j$(sysctl -n hw.ncpu)

    - name: Deploy macOS executable
      run: |
        $Qt6_DIR/bin/macdeployqt build/qt_2025_game.app -dmg
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: qt-2d-game-macos
        path: build/qt_2025_game.dmg
        retention-days: 7

  release:
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Prepare release assets
      run: |
        mkdir -p release
        find artifacts/qt-2d-game-windows -name '*.zip' -exec mv {} release/qt-2d-game-windows-${{ github.ref_name }}.zip \;
        find artifacts/qt-2d-game-linux -name '*.AppImage' -exec mv {} release/qt-2d-game-linux-${{ github.ref_name }}.AppImage \;
        find artifacts/qt-2d-game-macos -name '*.dmg' -exec mv {} release/qt-2d-game-macos-${{ github.ref_name }}.dmg \;
        echo "Release assets prepared:"
        ls -la release/
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: "Qt 2D Game ${{ github.ref_name }}"
        body: |
          ## 🎮 Qt 2D Game Release ${{ github.ref_name }}
          
          这是一个自动构建的发行版。请根据您的操作系统下载对应的文件。
          
          **下载文件:**
          - **Windows**: `qt-2d-game-windows-${{ github.ref_name }}.zip`
          - **Linux**: `qt-2d-game-linux-${{ github.ref_name }}.AppImage` (下载后请添加执行权限: `chmod +x *.AppImage`)
          - **macOS**: `qt-2d-game-macos-${{ github.ref_name }}.dmg`
          
          ---
          *Built from commit: `${{ github.sha }}`*
        files: release/*
        draft: false
        prerelease: false